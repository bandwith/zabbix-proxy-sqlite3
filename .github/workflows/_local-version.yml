name: Local Version Management

on:
  workflow_call:
    inputs:
      zabbix_version:
        required: true
        type: string
        description: "The upstream Zabbix version (X.Y.Z)"
    outputs:
      local_version:
        description: "The local version with patch increment if needed (X.Y.Z.N)"
        value: ${{ jobs.determine-local-version.outputs.local_version }}
      is_local_change:
        description: "Whether a local change was detected"
        value: ${{ jobs.determine-local-version.outputs.is_local_change }}

jobs:
  determine-local-version:
    runs-on: ubuntu-latest
    outputs:
      local_version: ${{ steps.check_local_version.outputs.local_version }}
      is_local_change: ${{ steps.check_local_version.outputs.is_local_change }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history to check for changes

      - name: Check for local changes and determine version
        id: check_local_version
        run: |
          ZABBIX_VERSION="${{ inputs.zabbix_version }}"
          echo "Checking for local changes for Zabbix version $ZABBIX_VERSION"

          # Initialize outputs
          IS_LOCAL_CHANGE="false"
          LOCAL_VERSION="$ZABBIX_VERSION"

          # Check if this image version has been built before
          echo "Checking for existing tags for version $ZABBIX_VERSION"
          EXISTING_TAGS=$(git tag -l "$ZABBIX_VERSION*" | sort -V)
          echo "Found existing tags: $EXISTING_TAGS"

          # Check if there have been local modifications since the last build
          LAST_TAG=$(echo "$EXISTING_TAGS" | tail -n 1)

          if [[ -z "$LAST_TAG" ]]; then
            echo "No existing tags found for $ZABBIX_VERSION, this is the first build"
            # First build of this version - no local incremental version needed
            LOCAL_VERSION="$ZABBIX_VERSION"
          else
            echo "Last tag for this version: $LAST_TAG"

            # Check if Dockerfile or scripts have changed since the last tag
            CHANGED_FILES=$(git diff --name-only $LAST_TAG HEAD -- Dockerfile scripts)

            if [[ -n "$CHANGED_FILES" ]]; then
              echo "Local changes detected since last build:"
              echo "$CHANGED_FILES"

              # Set flag to indicate local changes
              IS_LOCAL_CHANGE="true"

              # Get the highest N value from existing X.Y.Z.N tags
              HIGHEST_N=0
              for TAG in $EXISTING_TAGS; do
                # Check if tag has a fourth component (N)
                if [[ $TAG =~ ^${ZABBIX_VERSION}\.[0-9]+$ ]]; then
                  N_VALUE=$(echo "$TAG" | cut -d. -f4)
                  if [[ $N_VALUE -gt $HIGHEST_N ]]; then
                    HIGHEST_N=$N_VALUE
                  fi
                fi
              done

              # Increment the N value for the new local version
              NEW_N=$(($HIGHEST_N + 1))
              LOCAL_VERSION="$ZABBIX_VERSION.$NEW_N"

              echo "Incrementing local patch version to $LOCAL_VERSION due to local changes"
            else
              echo "No local changes detected since the last build"
              # Use the same version as before
              LOCAL_VERSION="$LAST_TAG"
            fi
          fi

          echo "local_version=$LOCAL_VERSION" >> $GITHUB_OUTPUT
          echo "is_local_change=$IS_LOCAL_CHANGE" >> $GITHUB_OUTPUT

          # Add to step summary
          echo "## Local Version Detection" >> $GITHUB_STEP_SUMMARY
          echo "| Type | Value | Description |" >> $GITHUB_STEP_SUMMARY
          echo "| ---- | ----- | ----------- |" >> $GITHUB_STEP_SUMMARY
          echo "| Zabbix Version | $ZABBIX_VERSION | Upstream Zabbix version |" >> $GITHUB_STEP_SUMMARY
          echo "| Local Version | $LOCAL_VERSION | Version with local patch increment |" >> $GITHUB_STEP_SUMMARY
          echo "| Is Local Change | $IS_LOCAL_CHANGE | Whether local changes were detected |" >> $GITHUB_STEP_SUMMARY
